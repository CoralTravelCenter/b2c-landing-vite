import fs from "fs-extra";
import {resolve} from "path";

export function readJson(filePath) {
  if (!filePath) {
    console.error("‚ùå –û—à–∏–±–∫–∞: –ü—É—Ç—å –∫ JSON-—Ñ–∞–π–ª—É –Ω–µ —É–∫–∞–∑–∞–Ω!");
    return null;
  }

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å
  const absolutePath = resolve(process.cwd(), filePath);

  console.log(`üìÇ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ JSON-—Ñ–∞–π–ª—É: ${absolutePath}`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
  if (!fs.existsSync(absolutePath)) {
    console.error(`‚ùå JSON-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${absolutePath}`);
    return null;
  }

  try {
    // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    const rawContent = fs.readFileSync(absolutePath, "utf-8");

    // –î–µ–∫–æ–¥–∏—Ä—É–µ–º JSON, –∏—Å–ø–æ–ª—å–∑—É—è jsesc
    const jsonData = JSON.parse(rawContent);

    console.log("‚úÖ JSON-—Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω!");
    return jsonData;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ JSON-—Ñ–∞–π–ª–∞:", error.message);
    return null;
  }
}
