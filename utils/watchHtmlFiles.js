import chokidar from "chokidar";
import fs from "fs-extra";

/**
 * –°–ª–µ–¥–∏—Ç –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ HTML-—Ñ–∞–π–ª–∞—Ö –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π HTML –≤ callback
 * @param {Array<string>} htmlFiles - –ú–∞—Å—Å–∏–≤ –ø—É—Ç–µ–π –∫ HTML-—Ñ–∞–π–ª–∞–º
 * @param {Function} onHtmlChange - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ HTML (filePath, updatedHtml)
 */
export function watchHtmlFiles(htmlFiles, onHtmlChange) {
  if (!htmlFiles.length) {
    console.warn("‚ö†Ô∏è –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.");
    return;
  }

  console.log("üëÄ –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ HTML-—Ñ–∞–π–ª–∞—Ö...");
  const watcher = chokidar.watch(htmlFiles, { persistent: true });

  watcher.on("change", (filePath) => {
    console.log(`‚ôªÔ∏è –§–∞–π–ª –∏–∑–º–µ–Ω—ë–Ω: ${filePath}`);

    try {
      // –ß–∏—Ç–∞–µ–º –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π HTML-—Ñ–∞–π–ª
      const updatedHtml = fs.readFileSync(filePath, "utf-8");

      // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫, –ø–µ—Ä–µ–¥–∞–≤–∞—è –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π HTML
      onHtmlChange(filePath, updatedHtml);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∏–∑–º–µ–Ω—ë–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ ${filePath}:`, error.message);
    }
  });
}
